package uz.abdurahmon.telegrambot.service.bot.inlineKeyBoards;

import org.telegram.telegrambots.meta.api.objects.replykeyboard.InlineKeyboardMarkup;
import org.telegram.telegrambots.meta.api.objects.replykeyboard.buttons.InlineKeyboardButton;
import uz.abdurahmon.telegrambot.entity.Attachment;
import uz.abdurahmon.telegrambot.entity.User;
import uz.abdurahmon.telegrambot.entity.enums.Language;

import java.util.List;

import static uz.abdurahmon.telegrambot.entity.enums.Language.*;

public interface InlineMarkup {
    default InlineKeyboardMarkup getInlineKeyboardMarkupToAskAnalyzeImage(User user) {
        InlineKeyboardMarkup markup = new InlineKeyboardMarkup();

        InlineKeyboardButton agree = new InlineKeyboardButton();
        InlineKeyboardButton disagree = new InlineKeyboardButton();
        InlineKeyboardButton back = new InlineKeyboardButton();

        switch (user.getLanguage()) {
            case UZBEK -> {
                agree.setText("Ha ‚úÖ");
                disagree.setText("Yoq ‚ùå");
                back.setText("Ortga üîô");
            }
            case ENGLISH -> {
                agree.setText("Yes ‚úÖ");
                disagree.setText("No ‚ùå");
                back.setText("Back üîô");
            }
            case RUSSIAN -> {
                agree.setText("–î–∞ ‚úÖ");
                disagree.setText("–ù–µ—Ç ‚ùå");
                back.setText("–ù–∞–∑–∞–¥ üîô");
            }
        }

        back.setCallbackData("BACK_TO_MAIN_PAGE");
        agree.setCallbackData("AGREE: " + user.getId());
        disagree.setCallbackData("DISAGREE: " + user.getId());

        markup.setKeyboard(List.of(List.of(agree, disagree), List.of(back)));

        return markup;
    }

    default InlineKeyboardMarkup getReplyKeyboardForFeedback(Long feedbackId, Language language) {
        InlineKeyboardMarkup markup = new InlineKeyboardMarkup();

        InlineKeyboardButton send = new InlineKeyboardButton();
        InlineKeyboardButton delete = new InlineKeyboardButton();

        switch (language) {
            case UZBEK -> {
                send.setText("Yuborish ‚úÖ");
                delete.setText("O'chirish ‚ùå");
            }
            case ENGLISH -> {
                delete.setText("Delete ‚ùå");
                send.setText("Send ‚úÖ");
            }
            default -> {
                delete.setText("–£–¥–∞–ª–∏—Ç—å ‚ùå");
                send.setText("–û—Ç–ø—Ä–∞–≤–∏—Ç—å ‚úÖ");
            }
        }

        send.setCallbackData("SEND_FEEDBACK: " + feedbackId);
        delete.setCallbackData("DELETE_FEEDBACK: " + feedbackId);

        markup.setKeyboard(
                List.of(
                        List.of(send, delete)
                )
        );

        return markup;
    }

    default InlineKeyboardMarkup getFeedbackForGroup(Long feedbackId) {
        InlineKeyboardMarkup markup = new InlineKeyboardMarkup();

        InlineKeyboardButton accept = new InlineKeyboardButton();
        InlineKeyboardButton decline = new InlineKeyboardButton();

        accept.setText("Accept ‚úÖ");
        decline.setText("Decline ‚ùå");

        accept.setCallbackData("ACCEPT_FEEDBACK_FOR_GROUP: " + feedbackId);
        decline.setCallbackData("DECLINE_FEEDBACK_FOR_GROUP: " + feedbackId);

        markup.setKeyboard(List.of(List.of(accept, decline)));

        return markup;
    }

    default InlineKeyboardMarkup getInlineKeyboardMarkupToAskAnalyzeImage(Attachment attachment, Language language) {
        InlineKeyboardMarkup markup = new InlineKeyboardMarkup();

        InlineKeyboardButton send = new InlineKeyboardButton();
        InlineKeyboardButton delete = new InlineKeyboardButton();

        switch (language) {
            case UZBEK -> {
                send.setText("Yuborish ‚úÖ");
                delete.setText("O'chirish ‚ùå");
            }
            case ENGLISH -> {
                delete.setText("Delete ‚ùå");
                send.setText("Send ‚úÖ");
            }
            default -> {
                delete.setText("–£–¥–∞–ª–∏—Ç—å ‚ùå");
                send.setText("–û—Ç–ø—Ä–∞–≤–∏—Ç—å ‚úÖ");
            }
        }

        send.setCallbackData("SEND_ATTACHMENT_TO_ANALYZE: " + attachment.getId());
        delete.setCallbackData("DELETE_ATTACHMENT: " + attachment.getId());

        markup.setKeyboard(List.of(List.of(send, delete)));
        return markup;
    }
}
